---
# Source: k8s-monitoring/charts/alloy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8smon-alloy
  namespace: default
  labels:
    helm.sh/chart: alloy-0.11.0
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: k8smon
    
    app.kubernetes.io/version: "v1.6.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: alloy
    app.kubernetes.io/component: rbac
---
# Source: k8s-monitoring/charts/alloy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8smon-alloy
  labels:
    helm.sh/chart: alloy-0.11.0
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: k8smon
    
    app.kubernetes.io/version: "v1.6.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: alloy
    app.kubernetes.io/component: config
data:
  config.alloy: |-
    logging {
    	level  = "info"
    	format = "logfmt"
    }
    
    discovery.kubernetes "pods" {
    	role = "pod"
    }
    
    discovery.kubernetes "nodes" {
    	role = "node"
    }
    
    discovery.kubernetes "services" {
    	role = "service"
    }
    
    discovery.kubernetes "endpoints" {
    	role = "endpoints"
    }
    
    discovery.kubernetes "endpointslices" {
    	role = "endpointslice"
    }
    
    discovery.kubernetes "ingresses" {
    	role = "ingress"
    }
---
# Source: k8s-monitoring/templates/alloy-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8smon-alloy-metrics
  namespace: default
data:
  config.alloy: |-
    
    
    
    remote.kubernetes.secret "alloy_metrics_remote_cfg" {
      name      = "grafana-cloud-credentials"
      namespace = "default"
    }
    
    remotecfg {
      id = sys.env("GCLOUD_FM_COLLECTOR_ID")
      url = "https://fleet-management-prod-008.grafana.net"
      basic_auth {
        username = nonsensitive(remote.kubernetes.secret.alloy_metrics_remote_cfg.data["GRAFANA_CLOUD_FLEET_MGMT_USER"])
        password = remote.kubernetes.secret.alloy_metrics_remote_cfg.data["GRAFANA_CLOUD_FLEET_MGMT_TOKEN"]
      }
      poll_frequency = 
      attributes = {
        "platform" = "kubernetes",
        "source" = "k8s-monitoring",
        "sourceVersion" = "2.0.5",
        "release" = "k8smon",
        "cluster" = "remote-config-test",
        "namespace" = "default",
        "workloadType" = "statefulset",
      }
    }
---
# Source: k8s-monitoring/templates/alloy-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8smon-alloy-logs
  namespace: default
data:
  config.alloy: |-
    
    
    
    remote.kubernetes.secret "alloy_logs_remote_cfg" {
      name      = "grafana-cloud-credentials"
      namespace = "default"
    }
    
    remotecfg {
      id = sys.env("GCLOUD_FM_COLLECTOR_ID")
      url = "https://fleet-management-prod-008.grafana.net"
      basic_auth {
        username = nonsensitive(remote.kubernetes.secret.alloy_logs_remote_cfg.data["GRAFANA_CLOUD_FLEET_MGMT_USER"])
        password = remote.kubernetes.secret.alloy_logs_remote_cfg.data["GRAFANA_CLOUD_FLEET_MGMT_TOKEN"]
      }
      poll_frequency = 
      attributes = {
        "platform" = "kubernetes",
        "source" = "k8s-monitoring",
        "sourceVersion" = "2.0.5",
        "release" = "k8smon",
        "cluster" = "remote-config-test",
        "namespace" = "default",
        "workloadType" = "daemonset",
      }
    }
---
# Source: k8s-monitoring/charts/alloy/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8smon-alloy
  labels:
    helm.sh/chart: alloy-0.11.0
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: k8smon
    
    app.kubernetes.io/version: "v1.6.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: alloy
    app.kubernetes.io/component: rbac
rules:
  # Rules which allow discovery.kubernetes to function.
  - apiGroups:
      - ""
      - "discovery.k8s.io"
      - "networking.k8s.io"
    resources:
      - endpoints
      - endpointslices
      - ingresses
      - nodes
      - nodes/proxy
      - nodes/metrics
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  # Rules which allow loki.source.kubernetes and loki.source.podlogs to work.
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "monitoring.grafana.com"
    resources:
      - podlogs
    verbs:
      - get
      - list
      - watch
  # Rules which allow mimir.rules.kubernetes to work.
  - apiGroups: ["monitoring.coreos.com"]
    resources:
      - prometheusrules
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
  # Rules for prometheus.kubernetes.*
  - apiGroups: ["monitoring.coreos.com"]
    resources:
      - podmonitors
      - servicemonitors
      - probes
    verbs:
      - get
      - list
      - watch
  # Rules which allow eventhandler to work.
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
  # needed for remote.kubernetes.*
  - apiGroups: [""]
    resources:
      - "configmaps"
      - "secrets"
    verbs:
      - get
      - list
      - watch
  # needed for otelcol.processor.k8sattributes
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
---
# Source: k8s-monitoring/charts/alloy/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8smon-alloy
  labels:
    helm.sh/chart: alloy-0.11.0
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: k8smon
    
    app.kubernetes.io/version: "v1.6.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: alloy
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8smon-alloy
subjects:
  - kind: ServiceAccount
    name: k8smon-alloy
    namespace: default
---
# Source: k8s-monitoring/charts/alloy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: k8smon-alloy
  labels:
    helm.sh/chart: alloy-0.11.0
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: k8smon
    
    app.kubernetes.io/version: "v1.6.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: alloy
    app.kubernetes.io/component: networking
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: k8smon
  internalTrafficPolicy: Cluster
  ports:
    - name: http-metrics
      port: 12345
      targetPort: 12345
      protocol: "TCP"
---
# Source: k8s-monitoring/charts/alloy/templates/controllers/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: k8smon-alloy
  labels:
    helm.sh/chart: alloy-0.11.0
    app.kubernetes.io/name: alloy
    app.kubernetes.io/instance: k8smon
    
    app.kubernetes.io/version: "v1.6.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: alloy
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: alloy
      app.kubernetes.io/instance: k8smon
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: alloy
      labels:
        app.kubernetes.io/name: alloy
        app.kubernetes.io/instance: k8smon
    spec:
      serviceAccountName: k8smon-alloy
      containers:
        - name: alloy
          image: docker.io/grafana/alloy:v1.6.1
          imagePullPolicy: IfNotPresent
          args:
            - run
            - /etc/alloy/config.alloy
            - --storage.path=/tmp/alloy
            - --server.http.listen-addr=0.0.0.0:12345
            - --server.http.ui-path-prefix=/
            - --stability.level=generally-available
          env:
            - name: ALLOY_DEPLOY_MODE
              value: "helm"
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - containerPort: 12345
              name: http-metrics
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 12345
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /etc/alloy
        - name: config-reloader
          image: ghcr.io/jimmidyson/configmap-reload:v0.14.0
          args:
            - --volume-dir=/etc/alloy
            - --webhook-url=http://localhost:12345/-/reload
          volumeMounts:
            - name: config
              mountPath: /etc/alloy
          resources:
            requests:
              cpu: 1m
              memory: 5Mi
      dnsPolicy: ClusterFirst
      volumes:
        - name: config
          configMap:
            name: k8smon-alloy
---
# Source: k8s-monitoring/templates/remote_config_secret.yaml
# create: false
# create: false
---
# Source: k8s-monitoring/templates/alloy.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: k8smon-alloy-singleton
  namespace: default
spec:
  interval: 1m
  chart:
    spec:
      chart: alloy
      sourceRef:
        kind: HelmRepository
        name: k8smon
        namespace: default
      interval: 1m
  values: 
    alloy:
      clustering:
        enabled: true
        name: alloy-metrics
      configMap:
        create: false
      extraEnv:
      - name: CLUSTER_NAME
        valueFrom:
          configMapKeyRef:
            key: CLUSTER
            name: test-variables
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: GCLOUD_FM_COLLECTOR_ID
        value: $(CLUSTER_NAME)-$(NAMESPACE)-$(POD_NAME)
      - name: GCLOUD_RW_API_KEY
        valueFrom:
          secretKeyRef:
            key: GRAFANA_CLOUD_FLEET_MGMT_TOKEN
            name: grafana-cloud-credentials
      nodeSelector:
        kubernetes.io/os: linux
      podAnnotations:
        k8s.grafana.com/logs.job: integrations/alloy
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - CHOWN
          - DAC_OVERRIDE
          - FOWNER
          - FSETID
          - KILL
          - SETGID
          - SETUID
          - SETPCAP
          - NET_BIND_SERVICE
          - NET_RAW
          - SYS_CHROOT
          - MKNOD
          - AUDIT_WRITE
          - SETFCAP
          drop:
          - ALL
        seccompProfile:
          type: RuntimeDefault
      stabilityLevel: public-preview
    collectorName: alloy-metrics
    controller:
      replicas: 1
      type: statefulset
    crds:
      create: false
    enabled: true
    extraConfig: ""
    liveDebugging:
      enabled: false
    logging:
      format: logfmt
      level: info
    remoteConfig:
      auth:
        password: ""
        passwordFrom: ""
        passwordKey: GRAFANA_CLOUD_FLEET_MGMT_TOKEN
        type: basic
        username: ""
        usernameFrom: ""
        usernameKey: GRAFANA_CLOUD_FLEET_MGMT_USER
      enabled: true
      extraAttributes: {}
      name: alloy-metrics-remote-cfg
      pollFrequency: 5m
      secret:
        create: false
        embed: false
        name: grafana-cloud-credentials
        namespace: ""
      type: remoteConfig
      url: https://fleet-management-prod-008.grafana.net
---
# Source: k8s-monitoring/templates/alloy.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: k8smon-alloy-singleton
  namespace: default
spec:
  interval: 1m
  chart:
    spec:
      chart: alloy
      sourceRef:
        kind: HelmRepository
        name: k8smon
        namespace: default
      interval: 1m
  values: 
    alloy:
      configMap:
        create: false
      extraEnv:
      - name: CLUSTER_NAME
        valueFrom:
          configMapKeyRef:
            key: CLUSTER
            name: test-variables
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName
      - name: GCLOUD_FM_COLLECTOR_ID
        value: $(CLUSTER_NAME)-$(NAMESPACE)-$(NODE_NAME)
      - name: GCLOUD_RW_API_KEY
        valueFrom:
          secretKeyRef:
            key: GRAFANA_CLOUD_FLEET_MGMT_TOKEN
            name: grafana-cloud-credentials
      mounts:
        dockercontainers: true
        varlog: true
      nodeSelector:
        kubernetes.io/os: linux
      podAnnotations:
        k8s.grafana.com/logs.job: integrations/alloy
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - CHOWN
          - DAC_OVERRIDE
          - FOWNER
          - FSETID
          - KILL
          - SETGID
          - SETUID
          - SETPCAP
          - NET_BIND_SERVICE
          - NET_RAW
          - SYS_CHROOT
          - MKNOD
          - AUDIT_WRITE
          - SETFCAP
          drop:
          - ALL
        seccompProfile:
          type: RuntimeDefault
      stabilityLevel: public-preview
    collectorName: alloy-logs
    controller:
      type: daemonset
    crds:
      create: false
    enabled: true
    extraConfig: ""
    liveDebugging:
      enabled: false
    logging:
      format: logfmt
      level: info
    remoteConfig:
      auth:
        password: ""
        passwordFrom: ""
        passwordKey: GRAFANA_CLOUD_FLEET_MGMT_TOKEN
        type: basic
        username: ""
        usernameFrom: ""
        usernameKey: GRAFANA_CLOUD_FLEET_MGMT_USER
      enabled: true
      extraAttributes: {}
      name: alloy-logs-remote-cfg
      pollFrequency: 5m
      secret:
        create: false
        embed: false
        name: grafana-cloud-credentials
        namespace: ""
      type: remoteConfig
      url: https://fleet-management-prod-008.grafana.net
---
# Source: k8s-monitoring/templates/temp_helm_repo.yaml
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: k8smon
  namespace: default
spec:
  interval: 1m
  url: https://grafana.github.io/helm-charts
